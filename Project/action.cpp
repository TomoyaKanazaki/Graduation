//
////=============================================
////=
////=	アクション処理 [action.cpp]
////=	Author:酒井 南勝
////=
////=============================================
//
//#include "action.h"
//
//#include "useful.h"
//
//#include "object.h"
//#include "enemy.h"
//
////=======================================
////=	静的変数宣言
////=======================================
//
////=================================================================
////= アクションの基底クラス
////=================================================================
////---------------------------------------------------------
////- コンストラクタ
////---------------------------------------------------------
//CAction::CAction()
//{
//
//}
//
////---------------------------------------------------------
////- デストラクタ
////---------------------------------------------------------
//CAction::~CAction()
//{
//
//}
//
////=================================================================
////= アクションの探索クラス
////=================================================================
////---------------------------------------------------------
////- コンストラクタ
////---------------------------------------------------------
//CActionSearch::CActionSearch()
//{
//
//}
//
////---------------------------------------------------------
////- デストラクタ
////---------------------------------------------------------
//CActionSearch::~CActionSearch()
//{
//
//}
//
////---------------------------------------------------------
////- 生成処理
////---------------------------------------------------------
//CActionSearch* CActionSearch::Create(void)
//{
//	// 生成
//	CActionSearch* pInstance = new CActionSearch;
//
//	// 初期化処理
//	if (FAILED(pInstance->Init()))
//	{//初期化処理が失敗した場合
//		return nullptr;
//	}
//
//	return pInstance;
//}
//
////---------------------------------------------------------
////- 初期化処理
////---------------------------------------------------------
//HRESULT CActionSearch::Init(void)
//{
//	return S_OK;
//}
//
////---------------------------------------------------------
////- 終了処理
////---------------------------------------------------------
//void CActionSearch::Uninit(void)
//{
//
//}
//
////---------------------------------------------------------
////- 更新処理
////---------------------------------------------------------
//void CActionSearch::Update(void)
//{
//}
//
////=================================================================
////= アクションの戦闘クラス
////=================================================================
////---------------------------------------------------------
////- コンストラクタ
////---------------------------------------------------------
//CActionBattle::CActionBattle()
//{
//
//}
//
////---------------------------------------------------------
////- デストラクタ
////---------------------------------------------------------
//CActionBattle::~CActionBattle()
//{
//
//}
//
////---------------------------------------------------------
////- 生成処理
////---------------------------------------------------------
//CActionBattle* CActionBattle::Create(void)
//{
//	// 生成
//	CActionBattle* pInstance = new CActionBattle;
//
//	// 初期化処理
//	if (FAILED(pInstance->Init()))
//	{//初期化処理が失敗した場合
//		return nullptr;
//	}
//
//	return pInstance;
//}
//
////---------------------------------------------------------
////- 初期化処理
////---------------------------------------------------------
//HRESULT CActionBattle::Init(void)
//{
//	return S_OK;
//}
//
////---------------------------------------------------------
////- 終了処理
////---------------------------------------------------------
//void CActionBattle::Uninit(void)
//{
//	m_pTgtEnemy = nullptr;
//}
//
////---------------------------------------------------------
////- 更新処理
////---------------------------------------------------------
//void CActionBattle::Update(void)
//{
//}
//
////---------------------------------------------------------
////- 追尾処理
////---------------------------------------------------------
//void CActionBattle::Tracking(D3DXVECTOR3* pos, D3DXVECTOR3* move, D3DXVECTOR3* rot, D3DXVECTOR3* rotDest)
//{
//	// ターゲットの有無を判定
//	if (m_pTgtEnemy != nullptr)
//	{
//		// ターゲットの状態を確認
//		if (m_pTgtEnemy->GetState() == CEnemy::STATE_DEATH)
//		{
//			// 死亡状態
//			m_pTgtEnemy = nullptr;
//		}
//		else
//		{
//			// 目的向きを算出（敵の位置）
//			rotDest->y = atan2f(m_pTgtEnemy->GetPos().z - pos->z, pos->x - m_pTgtEnemy->GetPos().x) + D3DX_PI * 0.5f;
//
//			// 敵との距離の判定（遠い）
//			if (useful::CollisionCircle(*pos, m_pTgtEnemy->GetPos(), 200.0f) == false)
//			{
//				// 進め
//				move->x = sinf(D3DX_PI + rot->y) * 10.0f;
//				move->z = cosf(D3DX_PI + rot->y) * 10.0f;
//			}
//			// 敵との距離の判定（近い）
//			else if (useful::CollisionCircle(*pos, m_pTgtEnemy->GetPos(), 150.0f) == true)
//			{
//				// 戻れ
//				move->x = -sinf(D3DX_PI + rot->y) * 10.0f;
//				move->z = -cosf(D3DX_PI + rot->y) * 10.0f;
//			}
//		}
//	}
//}
//
////---------------------------------------------------------
////- 敵との当たり判定
////---------------------------------------------------------
//void CActionBattle::CollisionEnemy(D3DXVECTOR3* pos)
//{
//	for (int nCntPriority = 0; nCntPriority < PRIORITY_MAX; nCntPriority++)
//	{
//		//オブジェクトを取得
//		CObject* pObj = CObject::GetTop(nCntPriority);
//
//		while (pObj != NULL)
//		{
//			// 次のオブジェクトを取得
//			CObject* pObjNext = pObj->GetNext();
//
//			// 種類を取得
//			CObject::TYPE type = pObj->GetType();			
//
//			if (type == CObject::TYPE_ENEMY3D)
//			{//種類が敵の時
//
//				// 敵のポインタに変換
//				CEnemy* pEnemy = (CEnemy*)pObj;
//
//				// 敵の距離を判定
//				if (useful::CollisionCircle(*pos, pEnemy->GetPos(), 5000.0f) == true)
//				{
//					// ターゲットの有無を判定 & 敵の状態判定（死亡）
//					if (m_pTgtEnemy == nullptr && pEnemy->GetState() != CEnemy::STATE_DEATH)
//					{
//						// ターゲットを更新
//						m_pTgtEnemy = pEnemy;
//					}
//				}
//			}
//
//			// オブジェクトを進める
//			pObj = pObjNext;
//		}
//	}
//}